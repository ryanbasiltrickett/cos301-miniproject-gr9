name: Production Continous Deployment (CD)
on:
  push:
    branches: [ main ]

jobs:
  build_and_deploy_app:
    environment: Production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create Temporary .env.prod
        run: |
          touch .env.prod
          echo ${{ secrets.ENV_PROD_FILE }} >> .env.prod

      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        run: yarn install --frozen-lockfile 

      - name: Build Application
        run: yarn build:app:prod
        
      - name: Deploy Application
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: >-
            ${{ secrets.FIREBASE_SERVICE_ACCOUNT_COS301_MINIPROJECT_2023_B1F6D }}
          channelId: live
          projectId: cos301-miniproject-2023-b1f6d

  build_and_deploy_api:
    environment: Production
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create Temporary .env.prod
        run: |
          touch .env.prod
          echo ${{ secrets.ENV_PROD_FILE }} >> .env.prod

      - name: Cache Dependencies
        uses: actions/cache@v2
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install Dependencies
        run: yarn install --frozen-lockfile 

      - name: Build API
        run: yarn build:api:prod
        
      - name: Deploy Firebase Functions
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only functions
        env:
          GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_COS301_MINIPROJECT_2023_B1F6D }}